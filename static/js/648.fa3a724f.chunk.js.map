{"version":3,"file":"static/js/648.fa3a724f.chunk.js","mappings":"gNAGaA,EAASC,EAAAA,GAAAA,OAAH,qWAMG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,iBAC/B,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,mBAKE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,sBAI7B,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,gBAGhCC,EAAAA,EAAAA,S,oECpBCC,E,QAAQT,GAAAA,KAAH,mFACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,UAC/B,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,oB,0HCDlBC,EAAQb,EAAAA,GAAAA,MAAH,6FAMLc,GAAcd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAH,iQAIF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,iBAG/B,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOa,iBAChB,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,SAASC,KAGjB,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,iBAIvB,SAAAN,GAAC,OAAIA,EAAEC,MAAMe,SAASE,MAC1B,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,OAAOa,iB,qEC+CjC,MA5DA,WACE,IAAMI,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAcFC,EAAgBC,EAAAA,GAAW,CAC/BC,KAAMD,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,IACzCC,MAAOL,EAAAA,KAAaE,aAGtB,OACE,SAAC,KAAD,CACEI,cAAe,CAAEL,KAAM,GAAII,MAAO,IAClCE,SApBiB,SAAC,GAAqB,IAAnBN,EAAkB,EAAlBA,KAAMI,EAAY,EAAZA,MAC5BT,EAASY,MAAK,SAAAC,GAAO,OAAIA,EAAQR,OAASA,KACtCS,EAAAA,OAAAA,QAAA,UACKT,GACH,4CACA,MAEFN,EAAc,CAAEM,KAAAA,EAAMI,MAAAA,IAE1Bb,EAAS,MAYPmB,iBAAkBZ,EAHpB,SAKG,gBAAGa,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMR,SAAUO,EAAhB,WACE,UAAC7B,EAAD,YACE,SAACJ,EAAA,EAAD,oBACA,SAACK,EAAD,CACE8B,KAAK,OACLf,KAAK,OACLgB,SAAUJ,EACVK,MAAON,EAAOX,QAEhB,SAAC,KAAD,CAAcA,KAAK,OAAOkB,UAAU,YAEtC,UAAClC,EAAD,YACE,SAACJ,EAAA,EAAD,qBACA,SAACK,EAAD,CACE8B,KAAK,MACLf,KAAK,QACLgB,SAAUJ,EACVK,MAAON,EAAOP,SAEhB,SAAC,KAAD,CAAcJ,KAAK,QAAQkB,UAAU,YAEvC,SAAChD,EAAA,EAAD,CAAQ6C,KAAK,SAASI,SAAUL,EAAhC,gCCpDV,MARA,WACE,OACE,SAACM,EAAA,EAAD,WACE,SAAC,EAAD,Q,qDCNN,IAAMC,EAEI,QAFJA,EAGI,SAGG1C,EAAc,CACzB2C,OAAO,cAAD,OANE,SAORC,OAAO,cAAD,OAAgBF,GACtBG,OAAO,cAAD,OAAgBH","sources":["components/ui/Button.js","components/ui/Title.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/AddContactPage.js","styleConfig/breakpoints.js"],"sourcesContent":["import styled from 'styled-components';\nimport { breakpoints } from 'styleConfig/breakpoints';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n\n  background-color: ${p => p.theme.colors.secondBgColor};\n  color: ${p => p.theme.colors.secondTextColor};\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color ${p => p.theme.colors.mainAnimationHover};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accentBgColor};\n  }\n\n  @media (${breakpoints.tablet}) {\n    width: 270px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.span`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.backdropBgColor};\n  margin-bottom: 5px;\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid ${p => p.theme.colors.secondBgColor};\n  outline: none;\n\n  color: ${p => p.theme.colors.mainTextColor};\n  font-size: ${p => p.theme.fontSize.s};\n\n  :focus {\n    border-color: ${p => p.theme.colors.accentBgColor};\n  }\n\n  ::placeholder {\n    font-size: ${p => p.theme.fontSize.xs};\n    color: ${p => p.theme.colors.mainTextColor};\n  }\n`;\n","import { Label, StyledField } from './ContactForm.styled';\nimport { Title } from 'components/ui/Title';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'store/contact-api';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Report } from 'notiflix';\nimport { Button } from 'components/ui/Button';\n\nfunction ContactForm() {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = ({ name, phone }) => {\n    contacts.some(contact => contact.name === name)\n      ? Report.warning(\n          `${name}`,\n          'This user is already in the contact list.',\n          'OK',\n        )\n      : createContact({ name, phone });\n\n    navigate('/');\n  };\n\n  const contactSchema = yup.object({\n    name: yup.string().required().min(3).max(30),\n    phone: yup.number().required(),\n  });\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      onSubmit={onSubmitForm}\n      validationSchema={contactSchema}\n    >\n      {({ values, handleChange, handleSubmit, isSubmitting }) => (\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Title>Name</Title>\n            <StyledField\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              value={values.name}\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            <Title>Phone</Title>\n            <StyledField\n              type=\"tel\"\n              name=\"phone\"\n              onChange={handleChange}\n              value={values.phone}\n            />\n            <ErrorMessage name=\"phone\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Add contact\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ContactForm;\n","import Container from 'components/ui/Container';\nimport ContactForm from 'components/ContactForm';\n\nfunction AddContactPage() {\n  return (\n    <Container>\n      <ContactForm />\n    </Container>\n  );\n}\n\nexport default AddContactPage;\n","const size = {\n  mobile: '370px',\n  tablet: '768px',\n  laptop: '1440px',\n};\n\nexport const breakpoints = {\n  mobile: `min-width: ${size.mobile}`,\n  tablet: `min-width: ${size.tablet}`,\n  laptop: `min-width: ${size.laptop}`,\n};\n"],"names":["Button","styled","p","theme","colors","secondBgColor","secondTextColor","mainAnimationHover","accentBgColor","breakpoints","Title","fontWeights","normal","backdropBgColor","Label","StyledField","Field","mainTextColor","fontSize","s","xs","navigate","useNavigate","useCreateContactMutation","createContact","contacts","useGetContactsQuery","data","contactSchema","yup","name","required","min","max","phone","initialValues","onSubmit","some","contact","Report","validationSchema","values","handleChange","handleSubmit","isSubmitting","type","onChange","value","component","disabled","Container","size","mobile","tablet","laptop"],"sourceRoot":""}